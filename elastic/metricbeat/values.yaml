image:
  repository: docker.elastic.co/beats/metricbeat
  tag: 6.3.2
  pullPolicy: IfNotPresent

config:
  metricbeat.autodiscover:
  providers:
    - type: kubernetes
      hints.enabled: true
      include_annotations: ["prometheus.io.scrape"]
      templates:
        - condition:
            contains:
              kubernetes.annotations.prometheus.io.scrape: "true"
          config:
            - module: prometheus
              metricsets: ["collector"]
              hosts: "${data.host}:{data.port}"

  metricbeat.config.modules:
    # Mounted `metricbeat-daemonset-modules` configmap:
    path: ${path.config}/modules.d/*.yml
    # Reload module configs as they change:
    reload.enabled: true

  processors:
    - add_host_metadata:
    - add_cloud_metadata:
    - add_kubernetes_metadata:
        in_cluster: true

  cloud.id: ${ELASTIC_CLOUD_ID}
  cloud.auth: ${ELASTIC_CLOUD_AUTH}

  output.elasticsearch:
    hosts: ['${ELASTICSEARCH_HOST:elasticsearch}:${ELASTICSEARCH_PORT:9200}']
    username: ${ELASTICSEARCH_USERNAME}
    password: ${ELASTICSEARCH_PASSWORD}

  setup.kibana.host: kibana.tools:443
# https://www.elastic.co/guide/en/beats/metricbeat/6.3/configuration-dashboards.html
  setup.dashboards.enabled: true
# https://www.elastic.co/guide/en/beats/metricbeat/6.3/configuration-logging.html
  logging.level: info
  logging.to_files: true
  logging.json: true
  logging.files:
    path: /var/stdout
    name: metricbeat
    # keepfiles: 7
    # permissions: 0644

# List of beat plugins
plugins: []
  # - kinesis.so

# A map of additional environment variables
extraVars:
  # test1: "test2"
  ELASTICSEARCH_HOST: elasticsearch
  # ELASTICSEARCH_PORT: "9200"
  ELASTICSEARCH_USERNAME: elastic
  ELASTICSEARCH_PASSWORD: guest
  ELASTIC_CLOUD_ID: ''
  ELASTIC_CLOUD_AUTH: ''


# Add additional volumes and mounts, for example to read other log files on the host
extraVolumes: []
  # - hostPath:
  #     path: /var/log
  #   name: varlog
extraVolumeMounts: []
  # - name: varlog
  #   mountPath: /host/var/log
  #   readOnly: true

resources: {}
  # Specifying resources when deploying is a good idea.
  # Not setting a default allows scheduling for development purposes in an environment
  # with limited resources such as minikube
  # limits:
  #  memory: 200Mi
  # requests:
  #  cpu: 100m
  #  memory: 100Mi

nodeSelector: {}

tolerations:
  - operator: Exists

affinity: {}

rbac:
  # Specifies whether RBAC resources should be created
  create: true

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
